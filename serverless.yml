org: antonioevaldo
app: escola-serverless
service: api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: prod
  # Permitir que as funções Lambda do seu usuário IAM da AWS leiam o bucket `alunos-csv`:
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 's3:GetObject'
          Resource:
            - 'arn:aws:s3:::alunos-csv/*'

# As `Properties` abaixo serão adicionadas ao recurso `S3BucketAlunoscsv` que já será criado pelo Serverless Framework
# As propriedades de CORS abaixo permitem que domínios externos, como o site do Front-end, possam acessar o bucket `alunos-csv`.
resources:
  extensions:
    S3BucketAlunoscsv:
      Properties:
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - POST
                - PUT
                - GET
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"

functions:
  # Uma função que reage a um evento do S3 indica para o Serverless Framework automaticamente criar o Bucket S3 na AWS ao realizar o deploy do projeto.
  cadastrarAlunos:
    handler: api/bucket-aws/index.cadastrarAlunos
    events:
      - s3:
          bucket: alunos-csv
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv

  simulandoUploadDeBucket:
    handler: api/bucket-local/index.simulandoUploadDeBucket
    events:
      - httpApi:
          method: post
          path: /alunos/batch
    enabled: false

  cadastrarAlunosDoBucketLocal:
    handler: api/bucket-local/index.cadastrarAlunos
    events:
      - s3:
          bucket: alunos-csv-local
          event: s3:ObjectCreated:*
    enabled: false

plugins:
  - serverless-offline
  - serverless-s3-local
  - serverless-disable-functions
